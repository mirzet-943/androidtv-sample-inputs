apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    packagingOptions {
        exclude 'error_prone/Annotations.gwt.xml'
        exclude 'third_party/java_src/error_prone/project/annotations/Annotations.gwt.xml'
        exclude 'third_party/java_src/error_prone/project/annotations/Google_internal.gwt.xml'
        exclude 'jsr305_annotations/Jsr305_annotations.gwt.xml'
    }
}

configurations {
    doclava
}

ext {
    appCompatVersion = '1.4.1' // Updated version using AndroidX
    playServicesVersion = '20.3.0' // Updated Play Services version
    supportTestVersion = '1.4.0' // Updated test library version
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.leanback:leanback:1.4.0"
    implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.2.1'
    implementation "com.google.android.gms:play-services-ads:$playServicesVersion"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation "org.robolectric:robolectric:4.6.1"

    androidTestImplementation "androidx.annotation:annotation:1.3.0"
    androidTestImplementation "androidx.test:runner:$supportTestVersion"
    androidTestImplementation "androidx.test:rules:$supportTestVersion"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    doclava 'com.google.doclava:doclava:1.0.6'
}

def packageVersion = '0.4.1'

task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc, dependsOn: project.configurations.doclava) {
    failOnError = false
    title = null
    source = android.sourceSets.main.java.srcDirs
    options.doclet = "com.google.doclava.Doclava"
    options.docletpath = configurations.doclava.files.asType(List)
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

publishing {
    publications {
        libraryPublish(MavenPublication) {
            groupId 'com.google.android.libraries.tv'
            artifactId 'companionlibrary'
            version packageVersion
            artifacts = configurations.archives.artifacts
            artifact sourceJar
            artifact javadocJar
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}